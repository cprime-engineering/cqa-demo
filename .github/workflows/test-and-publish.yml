---
name: Test and Publish Maven and Docker Packages
on:
  push:
  schedule:
    - cron: "0 3 * * *"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        java: ["11", "17"]
    name: UnitTests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: "zulu"
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: >
            ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            ${{ matrix.java }}${{ matrix.os }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run tests with Maven
        run: cd ./micro-services/fibonacci-calculator && mvn test
        env:
          MAVEN_REGISTRY_USERNAME: ${{ secrets.MAVEN_REGISTRY_USERNAME }}
          MAVEN_REGISTRY_TOKEN: ${{ secrets.MAVEN_REGISTRY_TOKEN }}

  maven-deploy:
    needs:
      - build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Deploy To Repo
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Deploy jar to maven packages repository
        run: cd ./micro-services/fibonacci-calculator && mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Package GitHub Containers
        id: package-github-containiers
        uses: ./.github/actions/package-containers-github
        with:
          REGISTRY: ghcr.io
          USER_NAME: ${{ github.actor }}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          APP_VERSION: latest
